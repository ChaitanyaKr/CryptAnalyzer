<java.security.SecureRandom: void nextBytes(byte[])> -> _SOURCE_
<java.security.SecureRandom: void setSeed(byte[])> -> _SOURCE_
<java.lang.String: byte[] getBytes(java.lang.String)> -> _SOURCE_

<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)> -> _SINK_
<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)> -> _SINK_
<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)> -> _SINK_
<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)> -> _SINK_
<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)> -> _SINK_
<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)> -> _SINK_
<javax.crypto.spec.IvParameterSpec: void <init>(byte[])> -> _SINK_
<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)> -> _SINK_
<javax.crypto.Cipher: byte[] doFinal(byte[])> -> _SINK_

<java.security.SecureRandom: void <init>()> -> _SOURCE_
<java.security.SecureRandom: void <init>(byte[])> -> _SOURCE_
<java.security.SecureRandom: void <init>(java.security.SecureRandomSpi,java.security.Provider)> -> _SOURCE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)> -> _SOURCE_
<javax.crypto.KeyGenerator: void init(java.security.SecureRandom)> -> _SINK_

<javax.crypto.KeyGenerator: void <init>(javax.crypto.KeyGeneratorSpi,java.security.Provider,java.lang.String)> -> _SOURCE_
<javax.crypto.KeyGenerator: void <init>(int,java.security.SecureRandom)> -> _SOURCE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)> -> _SOURCE_
<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()> -> _SOURCE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)> -> _SOURCE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)> -> _SOURCE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)> -> _SOURCE_

<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)> -> _SINK_

<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)> -> _SINK_





<android.location.Location: double getLatitude()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_

<android.telephony.TelephonyManager: java.lang.String getDeviceId()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> android.permission.READ_PHONE_STATE -> _SOURCE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> android.permission.READ_PHONE_STATE -> _SOURCE_

<java.net.URLConnection: java.io.OutputStream getOutputStream()> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_

%<java.io.OutputStream: void <init>() -> _SOURCE_

%<java.io.Writer: void <init>()> -> _SOURCE_
%<java.io.Writer: void <init>(java.lang.Object)> -> _SOURCE_

%<java.io.InputStream: void <init>()> -> _SOURCE_

%<java.io.Reader: <init>()> -> _SOURCE_
%<java.io.Reader: <init>(java.lang.Object)> -> _SOURCE_

<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)> -> _SOURCE_
<org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)> -> _SOURCE_
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> -> _SOURCE_

% add Activity.getIntent() as source instead of the next methods to avoid duplicate results.
%<android.content.Intent: java.lang.String getAction()> -> _SOURCE_
%<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: boolean getBooleanExtra(java.lang.String, boolean)> -> _SOURCE_
%<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: byte getByteExtra(java.lang.String, byte)> -> _SOURCE_
%<android.content.Intent: java.util.Set getCategories()> -> _SOURCE_
%<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: char getCharExtra(java.lang.String, char)> -> _SOURCE_
%<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: android.content.ClipData getClipData()> -> _SOURCE_
%<android.content.Intent: android.content.ComponentName getComponent()> -> _SOURCE_
%<android.content.Intent: android.net.Uri getData()> -> _SOURCE_
%<android.content.Intent: java.lang.String getDataString()> -> _SOURCE_
%<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: double getDoubleExtra(java.lang.String, double)> -> _SOURCE_
%<android.content.Intent: android.os.Bundle getExtras()> -> _SOURCE_
%<android.content.Intent: int getFlags()> -> _SOURCE_
%<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: float getFloatExtra(java.lang.String, float)> -> _SOURCE_
%<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: android.content.Intent getIntent(java.lang.String)> -> _SOURCE_
%<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> -> _SOURCE_
%<android.content.Intent: int getIntExtra(java.lang.String, int)> -> _SOURCE_
%<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: long getLongExtra(java.lang.String, long)> -> _SOURCE_
%<android.content.Intent: java.lang.String getPackage()> -> _SOURCE_
%<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.lang.String getScheme()> -> _SOURCE_
%<android.content.Intent: android.content.Intent getSelector()> -> _SOURCE_
%<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: short getShortExtra(java.lang.String, short)> -> _SOURCE_
%<android.content.Intent: android.graphics.Rect getSourceBounds()> -> _SOURCE_
%<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> -> _SOURCE_
%<android.content.Intent: java.lang.String getType()> -> _SOURCE_

%<android.content.Intent: void <init>()> -> _SOURCE_
%<android.content.Intent: void <init>(android.content.Intent)> -> _SOURCE_
%<android.content.Intent: void <init>(java.lang.String)> -> _SOURCE_
%<android.content.Intent: void <init>(java.lang.String,android.net.Uri)> -> _SOURCE_
%<android.content.Intent: void <init>(android.content.Context,java.lang.Class)> -> _SOURCE_
%<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)> -> _SOURCE_

%bundle sources
<android.os.Bundle: java.lang.Object get(java.lang.String)> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String)> -> _SOURCE_
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> -> _SOURCE_
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> -> _SOURCE_
<android.os.Bundle: byte getByte(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> -> _SOURCE_
<android.os.Bundle: byte[] getByteArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String)> -> _SOURCE_
<android.os.Bundle: char getChar(java.lang.String,char)> -> _SOURCE_
<android.os.Bundle: char[] getCharArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String)> -> _SOURCE_
<android.os.Bundle: double getDouble(java.lang.String,double)> -> _SOURCE_
<android.os.Bundle: double[] getDoubleArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String)> -> _SOURCE_
<android.os.Bundle: float getFloat(java.lang.String,float)> -> _SOURCE_
<android.os.Bundle: float[] getFloatArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String,int)> -> _SOURCE_
<android.os.Bundle: int getInt(java.lang.String)> -> _SOURCE_
<android.os.Bundle: int[] getIntArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String)> -> _SOURCE_
<android.os.Bundle: long getLong(java.lang.String,long)> -> _SOURCE_
<android.os.Bundle: long[] getLongArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> -> _SOURCE_
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String)> -> _SOURCE_
<android.os.Bundle: short getShort(java.lang.String,short)> -> _SOURCE_
<android.os.Bundle: short[] getShortArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.lang.String getString(java.lang.String)> -> _SOURCE_
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)> -> _SOURCE_

<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> -> _SOURCE_
<android.media.AudioRecord: int read(short[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(byte[],int,int)> -> _SOURCE_
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> -> _SOURCE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)> -> _SOURCE_
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)> -> _SOURCE_

<android.os.Handler: android.os.Message obtainMessage()> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int)> -> _SOURCE_
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)> -> _SOURCE_

<android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> -> _SOURCE_

<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String: getMacAddress()> -> _SOURCE_
<java.util.Locale: java.lang.String getCountry()> -> _SOURCE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getCid()> -> _SOURCE_
<android.telephony.gsm.GsmCellLocation: int getLac()> -> _SOURCE_
<android.location.Location: double getLongitude()> -> _SOURCE_
<android.location.Location: double getLatitude()> -> _SOURCE_
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> -> _SOURCE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllBookmarks()> -> _SOURCE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls()> -> _SOURCE_
<java.net.URL: java.net.URLConnection openConnection()> -> _SOURCE_

<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_

<android.app.Activity: android.content.Intent getIntent()> -> _SOURCE_

<android.app.Activity: void onActivityResult(int,int,android.content.Intent)> -> _SOURCE_

<android.app.Activity: android.view.View findViewById(int)> -> _SOURCE_
<android.database.Cursor: java.lang.String getString(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)> -> _SOURCE_
